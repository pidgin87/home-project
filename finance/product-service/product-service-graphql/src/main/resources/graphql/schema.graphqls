type Query {
    getProductList: [Product]
    getProductListByIds(productIds: [String]): [Product]
    getProduct(productId: String): Product
}

type Mutation {
    createProduct(name: String, type: String): Product
    deleteProduct(productId: String): VoidResponse
}

type Product {
    id: String
    name: String
    type: ProductType
    amount: Amount
}

type Amount {
    amount: Float
    currency: Currency
}

type Currency {
    id: String
    iso: ProductType
    name: String
    symbol: String
}

enum ProductType {
    CARD,
    ACCOUNT,
    BROKER_ACCOUNT
}

type VoidResponse {
    result: Boolean
}