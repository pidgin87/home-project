type Query {
    getOperationList: [Operation]
}

type Mutation {
    createOperation(
        sourceProduct: String,
        sourceFund: String,
        sourceAmount: Float,
        sourceCurrency: String,

        destinationProduct: String,
        destinationFund: String,
        destinationAmount: Float,
        destinationCurrency: String,

        description: String

    ): VoidResponse
}

type Operation {
    id: String
    description: String

    sourceProduct: Product
    sourceAmount: Float
    sourceCurrency: Currency

    destinationProduct: Product
    destinationAmount: Float
    destinationCurrency: Currency

    createdDate: DateTime
}

type Currency {
    id: String
    iso: ProductType
    name: String
    symbol: String
}

type Product {
    id: String
    name: String
    type: ProductType
}

enum ProductType {
    CARD,
    ACCOUNT,
    BROKER_ACCOUNT
}

type VoidResponse {
    result: Boolean
}

scalar DateTime